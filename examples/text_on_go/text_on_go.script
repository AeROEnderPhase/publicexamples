function init(self)
	msg.post(".", "acquire_input_focus")
	self.things = {}
	math.randomseed(os.time())
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	msg.post("@render:", "draw_text", { text = "Click to spawn game objects.", position = vmath.vector3(20, 20, 0) } )

	local w = tonumber(sys.get_config("display.width"))
	local h = tonumber(sys.get_config("display.height"))
	for k,thing in pairs(self.things) do
		local pos = go.get_position(thing.id)
		pos.x = pos.x + thing.sx * dt
		pos.y = pos.y + thing.sy * dt
		if pos.x < 0 or pos.x > w then
			thing.sx = -thing.sx
			thing.hp = thing.hp - 1
		elseif pos.y < 0 or pos.y > h then
			thing.sy = -thing.sy
			thing.hp = thing.hp - 1
		end
		go.set_position(pos, thing.id)
		if thing.hp == 0 then
			self.things[k] = nil
			go.delete(thing.id)
			msg.post("#text_on_go", "deletetext", { id = thing.id })
		else
			msg.post("#text_on_go", "updatetext", { id = thing.id, position = pos, text = "HP: " .. thing.hp })
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		local pos = vmath.vector3(action.x, action.y, 0)
		local id = factory.create("#factory", pos)
		local thing = { id = id, sx = math.random(-200, 200), sy = math.random(-200, 200), hp = 3 }
		table.insert(self.things, thing)
		msg.post("#text_on_go", "createtext", { id = id, text = "HP: " .. thing.hp, position = pos })
	end
end
