local W = sys.get_config("display.width")
local H = sys.get_config("display.height")

local max_count = 2500
local count = 0

local timestamps = {}

local spawn
spawn = function()
	if count < max_count then
		local position = vmath.vector3(math.random(1, W), (H / 1) + math.random(1, H / 2), 0)
		local id = factory.create("#factory", position)
		count = count + 1
		local duration = math.random(20, 40) / 10
		duration = 2
		go.animate(id, "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(position.x, 0, 0), go.EASING_OUTBOUNCE, duration, 0, function()
			go.delete(id)
			count = count - 1
		end)
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if #timestamps < 5 then
		table.insert(timestamps, socket.gettime())
		if #timestamps == 5 then
			print("AVG " .. ((timestamps[#timestamps] - timestamps[1]) / 4))
			for i=2,5 do
				print(timestamps[i] - timestamps[i-1])
			end
		end
	end
	for i=1,max_count do
		--spawn()
	end
	msg.post("@render:", "draw_text", { text = "COUNT " .. count, position = vmath.vector3(20, 40, 0) } )
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action.released then
		timestamps = { socket.gettime()}
		for i=1,max_count do
			spawn()
		end
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
